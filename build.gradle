plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

String celibVersion = project.celib_version + "+" + project.minecraft_version
String resproVersion = project.respro_version + "+" + project.minecraft_version

repositories {
    maven {
        name = "Cebbys Repo"
        url = "https://prod-cebbys-repomanager.herokuapp.com"
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
//    maven {
//        name = "Balm repository"
//        url = "https://maven.pkg.github.com/ModdingForBlockheads/Balm"
//    }
//    maven {
//        name = "KleeSlabs repository"
//        url = "https://maven.pkg.github.com/ModdingForBlockheads/KleeSlabs"
//    }
//    flatDir {
//        dirs 'libs'
//    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_api_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cardinal_api_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_api_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cardinal_api_version}"

    modImplementation "lv.cebbys.mcmods:celib:${celibVersion}"
    modImplementation "lv.cebbys.mcmods:respro:${resproVersion}"

    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
    testCompileOnly "org.projectlombok:lombok:${project.lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
}

processResources {
    var map = Map.of(
            "version", project.mod_version,
            "minecraft_dependency", ">=1.16",
            "celib_dependency", getModDependency(project.celib_version),
            "respro_dependency", getModDependency(project.respro_version),
            "cardinal_api_dependency", getModDependency(project.cardinal_api_version)
    )

    inputs.properties(map)

    filesMatching("fabric.mod.json") {
        expand(map)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            credentials {
                username = System.getenv("REPO_USERNAME")
                password = System.getenv("REPO_PASSWORD")
            }
            url = "https://prod-cebbys-repomanager.herokuapp.com"
        }
    }
}

String getModDependency(Object versionObject) {
    String version = versionObject.toString()
    try {
        StringBuilder out = new StringBuilder()
        out.append(version.substring(0, version.indexOf(".") + 1))
        version = version.substring(version.indexOf(".") + 1)
        if (version.contains(".")) version = version.substring(0, version.indexOf(".") + 1)
        out.append(version).append("x")
        return out
    } catch (Exception e) {
    }
    throw new RuntimeException("Invalid mod version: " + version);
}
